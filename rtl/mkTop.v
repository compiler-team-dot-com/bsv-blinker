//
// Generated by Bluespec Compiler (build 2063631)
//
// On Mon Feb  1 21:12:48 AEST 2021
//
//
// Ports:
// Name                         I/O  size props
// led_1                          O     1 reg
// led_2                          O     1 reg
// three                          O     1 const
// clk                            I     1 clock
// rst                            I     1 reset
// btn_pressed                    I     1 reg
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(clk,
	     rst,

	     led_1,

	     led_2,

	     three,

	     btn_pressed);
  input  clk;
  input  rst;

  // actionvalue method led_1
  output led_1;

  // actionvalue method led_2
  output led_2;

  // value method three
  output three;

  // action method btn
  input  btn_pressed;

  // signals for module outputs
  wire led_1, led_2, three;

  // register b
  reg b;
  wire b$D_IN, b$EN;

  // register c
  reg c;
  wire c$D_IN, c$EN;

  // actionvalue method led_1
  assign led_1 = b ;

  // actionvalue method led_2
  assign led_2 = c ;

  // value method three
  assign three = 1'd1 ;

  // register b
  assign b$D_IN = !b ;
  assign b$EN = 1'd1 ;

  // register c
  assign c$D_IN = btn_pressed ;
  assign c$EN = 1'd1 ;

  // handling of inlined registers

  always@(posedge clk)
  begin
    if (rst == `BSV_RESET_VALUE)
      begin
        b <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (b$EN) b <= `BSV_ASSIGNMENT_DELAY b$D_IN;
	if (c$EN) c <= `BSV_ASSIGNMENT_DELAY c$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    b = 1'h0;
    c = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkTop

